from telegram import (
    Update,
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton
)
from telegram.ext import ContextTypes

# --- –¢–µ–∫—Å—Ç–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ì–æ–ª–æ–≤–Ω–æ–≥–æ –ú–µ–Ω—é ---
MENU_TASKS_TEXT = "üìù –ó–∞–≤–¥–∞–Ω–Ω—è"
MENU_JOURNAL_TEXT = "üìñ –ñ—É—Ä–Ω–∞–ª"
MENU_MOOD_TEXT = "üòä –ù–∞—Å—Ç—Ä—ñ–π"
MENU_POMODORO_TEXT = "üçÖ Pomodoro"
MENU_STATS_TEXT = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
MENU_TIP_TEXT = "üí° –ü–æ—Ä–∞–¥–∞ –¥–Ω—è"

# –ì–æ–ª–æ–≤–Ω–∞ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∞ (ReplyKeyboard)
main_menu_keyboard_layout = [
    [KeyboardButton(MENU_TASKS_TEXT), KeyboardButton(MENU_JOURNAL_TEXT)],
    [KeyboardButton(MENU_MOOD_TEXT), KeyboardButton(MENU_POMODORO_TEXT)],
    [KeyboardButton(MENU_STATS_TEXT), KeyboardButton(MENU_TIP_TEXT)]
]
main_menu_reply_markup = ReplyKeyboardMarkup(
    main_menu_keyboard_layout,
    resize_keyboard=True,
    one_time_keyboard=False
)


async def send_main_menu(
        update: Update,
        context: ContextTypes.DEFAULT_TYPE,
        message_text: str | None = None
):
    """–ù–∞–¥—Å–∏–ª–∞—î –≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é."""
    chat_id = update.effective_chat.id
    text_to_send = message_text if message_text else "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é. –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"

    target_message_obj = update.message
    if not target_message_obj and update.callback_query:
        target_message_obj = update.callback_query.message

    if target_message_obj:
        await target_message_obj.reply_text(
            text_to_send,
            reply_markup=main_menu_reply_markup
        )
    else:
        await context.bot.send_message(
            chat_id=chat_id,
            text=text_to_send,
            reply_markup=main_menu_reply_markup
        )


async def show_tasks_submenu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton(
            "‚ûï –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è",
            callback_data="tasks_submenu:add"
        )],
        [InlineKeyboardButton(
            "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å",
            callback_data="tasks_submenu:list"
        )],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é —ñ–∑ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏:",
        reply_markup=reply_markup
    )


async def show_journal_submenu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [
            InlineKeyboardButton(
                "üí° –Ü–¥–µ—è",
                callback_data="journal_submenu:new:idea"
            ),
            InlineKeyboardButton(
                "üí≠ –î—É–º–∫–∞",
                callback_data="journal_submenu:new:thought"
            ),
            InlineKeyboardButton(
                "üåô –°–æ–Ω",
                callback_data="journal_submenu:new:dream"
            ),
        ],
        [InlineKeyboardButton(
            "üìö –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º—ñ–π –∂—É—Ä–Ω–∞–ª",
            callback_data="journal_submenu:view_all"
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–©–æ –±–∞–∂–∞—î—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ –∑ –∂—É—Ä–Ω–∞–ª–æ–º?",
        reply_markup=reply_markup
    )


async def show_mood_submenu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton(
            "‚úèÔ∏è –ó–∞–ø–∏—Å–∞—Ç–∏ –Ω–∞—Å—Ç—Ä—ñ–π",
            callback_data="mood_submenu:new"
        )],
        [InlineKeyboardButton(
            "üìä –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –Ω–∞—Å—Ç—Ä–æ—é",
            callback_data="mood_submenu:view_all"
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –¥–ª—è –∂—É—Ä–Ω–∞–ª—É –Ω–∞—Å—Ç—Ä–æ—é:",
        reply_markup=reply_markup
    )


async def show_pomodoro_submenu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton(
            "üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ Pomodoro (–±–µ–∑ –ø—Ä–∏–≤'—è–∑–∫–∏)",
            callback_data="pomodoro_submenu:start_any"
        )],
        [InlineKeyboardButton(
            "üîó –ó–∞–ø—É—Å—Ç–∏—Ç–∏ –¥–ª—è –∑–∞–≤–¥–∞–Ω–Ω—è...",
            callback_data="pomodoro_submenu:start_linked_select_task"
        )]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Pomodoro:", reply_markup=reply_markup)
